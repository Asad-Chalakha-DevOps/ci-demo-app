version: 0.2

env:
  variables:
    # REQUIRED: Set to your ECR repository name (no account/URI prefix)
    ECR_REPOSITORY: "my-app"
    # REQUIRED: Set to your ECS task definition container name
    CONTAINER_NAME: "my-app"
    # Optional: default region; CodeBuild usually sets AWS_DEFAULT_REGION automatically
    AWS_REGION: "us-east-1"

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - echo "Starting install phase"
  pre_build:
    commands:
      - set -e
      - echo "Resolving AWS account and region"
      - export AWS_REGION=${AWS_REGION:-${AWS_DEFAULT_REGION}}
      - export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - export REPOSITORY_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY"
      - echo "Logging into ECR $REPOSITORY_URI"
      - aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com"
      - echo "Ensuring ECR repository exists: $ECR_REPOSITORY"
      - |
        aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" --region "$AWS_REGION" >/dev/null 2>&1 \
        || aws ecr create-repository \
            --repository-name "$ECR_REPOSITORY" \
            --image-scanning-configuration scanOnPush=true \
            --encryption-configuration encryptionType=AES256 \
            --region "$AWS_REGION"
      - export IMAGE_TAG=${IMAGE_TAG:-$(echo "$CODEBUILD_RESOLVED_SOURCE_VERSION" | cut -c1-12)}
      - echo "Repository URI: $REPOSITORY_URI"
      - echo "Image tag: $IMAGE_TAG"
  build:
    commands:
      - set -e
      - export AWS_REGION=${AWS_REGION:-${AWS_DEFAULT_REGION}}
      - export AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID:-$(aws sts get-caller-identity --query Account --output text)}
      - export REPOSITORY_URI=${REPOSITORY_URI:-"$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY"}
      - export IMAGE_TAG=${IMAGE_TAG:-$(echo "$CODEBUILD_RESOLVED_SOURCE_VERSION" | cut -c1-12)}
      - echo "Building the Docker image"
      - docker build -t "$ECR_REPOSITORY:$IMAGE_TAG" .
      - docker tag "$ECR_REPOSITORY:$IMAGE_TAG" "$REPOSITORY_URI:$IMAGE_TAG"
      - docker tag "$REPOSITORY_URI:$IMAGE_TAG" "$REPOSITORY_URI:latest"
  post_build:
    commands:
      - set -e
      - export AWS_REGION=${AWS_REGION:-${AWS_DEFAULT_REGION}}
      - export AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID:-$(aws sts get-caller-identity --query Account --output text)}
      - export REPOSITORY_URI=${REPOSITORY_URI:-"$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY"}
      - export IMAGE_TAG=${IMAGE_TAG:-$(echo "$CODEBUILD_RESOLVED_SOURCE_VERSION" | cut -c1-12)}
      - echo "Pushing Docker images to $REPOSITORY_URI"
      - docker push "$REPOSITORY_URI:$IMAGE_TAG"
      - docker push "$REPOSITORY_URI:latest"
      - echo "Generating imagedefinitions.json for ECS"
      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$REPOSITORY_URI:$IMAGE_TAG" > imagedefinitions.json
      - echo "imagedefinitions.json contents:" && cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
